1.主程序LqPolicyTask.py，负责解析模板，迭代成实际任务并多线程调度执行

2.指标函数库LqIndicator.py，现在里面我只放了几个简单定义，指标定义形式：
def AMA(n = 10, fast_n = 2, slow_n = 30):
    '''00001,3,2'''
    return 1,2
引号里面的是函数注释，用于指导任务迭代，第一个是序号，第二个是入参个数，第三个是返回值个数

3.通用库LqCommon.py，包含各个公共类和公共函数，全局变量

4.数据库任务处理LqDB.py，主要用于任务执行结果入库

5.策略模板文件Template.py
$$F:[...]$：指标函数，
$$P:...$：参数，可以用[]指定列表，也可以用三个参数分别表示起始值和步长
# Database：为数据库入库示例代码

6.策略模板文件2 Template2.py
hikyuu示例代码






指标函数说明：
1.全部指标函数库文件，用于指标迭代任务生成，共753个函数，编号1-753。如果编号大于753会被忽略
LqIndicator.py

2.Hikyuu指标函数封装文件，迭代编号1-157
LqHikyuuIndc.py

3.财务指标函数封装文件，迭代编号158-324
LqFinance.py

4.talib指标函数封装文件，迭代编号325-461
LqTalibIndc.py

5.101指标函数封装文件，迭代编号462-562
LqAlpha101.py

6.191指标函数封装文件，迭代编号563-753
LqAlpha191.py

在策略模板中根据实际情况import相应的封装文件









1.函数迭代
1）需要在模板代码中导入函数库
import factors as lqidc

2）迭代函数列表以$$F:开头，以$结束，比如$$F:[1,6,12]$表示编号为1,6,12的函数被用于迭代

3）函数编号列表可以使用方括号限定，也可以不使用方括号，比如$$F:[1,6,12]$和$$F:1,6,12$是等效的

4）函数编号可以枚举，也可以指定区间，单个编号或区间相互以逗号分隔，比如$$F:[1,6,12,15-20,30]$，表示1,6,12,15,16,17,18,19,20,30共10个函数会被用于迭代

5）函数需要指定以上import的库进行引用，比如day_ma = lqidc.$$F:[1,6,12]$(day_c, tmp)


2.参数迭代
1）迭代参数列表以$$P:开头，以$结束，比如$$P:[100,200,300]$表示使用100,200,300三个参数值进行迭代

2）参数列表如果用方括号限定时，表示参数为枚举或区间，比如K1 = $$P:[100,200-205,300]$，表示100,200,201,202,203,204,205,300共8个参数会被用于迭代到K1变量

3）参数列表如果不使用方括号限定时，表示参数采用步长的方式进行计算，比如K2 = $$P:1,20,5$表示从1开始，步长为5，最大值不超过20，此时有1,6,11,16共4个参数会被用于迭代到K2变量

4）参数步长的方式还可以用于小数，比如$$P:0.1,1,0.2$表示0.1,0.3,0.5,0.7,0.9共5个参数会被用于迭代

5）参数迭代可以直接用在函数参数表中，比如if lqidc.$$F:[1,2]$(data, $$P:[10-20]$) <= $$P:0.1, 0.5, 0.3$:表示函数1和2被迭代的同时参数表的第二个参数被10-20迭代，条件表达式的右值也被$$P:0.1, 0.5, 0.3$迭代

3.迭代次数计算
1）如果代码行中有函数或参数迭代，不管代码行是否被注释都会被计算到迭代次数中

2）迭代次数是各个函数和参数迭代位置的次数的笛卡尔积，比如函数有2处迭代，第一处3个函数，第二处2个函数，参数有3处迭代，第一处5个参数，第二处6个参数，第三处10个参数，此时总的迭代次数为3*2*5*6*10=1800

